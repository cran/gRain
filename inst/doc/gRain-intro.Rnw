% \VignetteIndexEntry{Short introduction to the gRain package}
% \VignetteDepends{gRbase}
% \VignetteKeyword{Graphical Models}
% \VignetteKeyword{Probabilistic networks}

\documentclass[12pt]{article}
\usepackage{boxedminipage,color,a4wide,url}
\usepackage[latin1]{inputenc}

\usepackage[authoryear,round]{natbib}
\bibliographystyle{plainnat}

\usepackage{Sweave}


\SweaveOpts{prefix.string=figures/graph} 

\def\pkg#1{\texttt{#1}}
\def\grbn{\texttt{gRain}}
\def\grain{\texttt{grain}}
\def\code#1{{\texttt{#1}}}
\def\R{\texttt{R}}


<<echo=FALSE,print=FALSE>>=
require( gRain )
prettyVersion <- packageDescription("gRain")$Version
prettyDate <- format(Sys.Date())
dir.create( "figures" )
@


\author{S{\o}ren H{\o}jsgaard\\Aalborg University, Denmark}
\title{A one--minute introduction to the \pkg{gRain} package} 
\date{\pkg{gRain} version \Sexpr{prettyVersion} as of \Sexpr{prettyDate}}



\begin{document}

%%\SweaveInput{Rmarkup.STY}
%% ------------------------
\definecolor{darkred}{rgb}{.7,0,0} 
\definecolor{midnightblue}{rgb}{0.098,0.098,0.439} 

\DefineVerbatimEnvironment{Sinput}{Verbatim}{
  fontfamily=tt,
  %%fontseries=b,
  %% xleftmargin=2em,
  formatcom={\color{midnightblue}}
} 
\DefineVerbatimEnvironment{Soutput}{Verbatim}{
  fontfamily=tt,
  %%fontseries=b,
  %% xleftmargin=2em,  
  formatcom={\color{darkred}}
} 
\DefineVerbatimEnvironment{Scode}{Verbatim}{
  fontfamily=tt,
  %%fontseries=b,
  %% xleftmargin=2em,  
  formatcom={\color{blue}}
} 

\fvset{listparameters={\setlength{\topsep}{-2pt}}}
\renewenvironment{Schunk}{\linespread{.90}}{}    
%% ------------------------





\maketitle



\tableofcontents
\parindent0pt\parskip5pt

\section{Introduction}

The \grbn\ package implements propagation in [gra]phical [i]ndependence
[n]etworks (hereafter abbreviated \grain). Such networks are also known
as probabilistic networks and Bayesian networks. 

To cite \grbn\ in publications, please use:

\begin{quote}
Søren Højsgaard (2012). Graphical Independence Networks with the gRain
Package for R. Journal of Statistical Software, 46(10),
1-26. \url{http://www.jstatsoft.org/v46/i10/}.   
\end{quote}

More information about the package, other graphical modelling packages
and development versions is available from
\begin{quote}
\url{http://people.math.aau.dk/~sorenh/software/gR}
\end{quote}


\section{A worked example: chest clinic} 
\label{sec:chest}

@ 
<<echo=F>>=
yn <- c("yes","no")
a    <- cptable(~asia, values=c(1,99),levels=yn)
t.a  <- cptable(~tub|asia, values=c(5,95,1,99),levels=yn)
s    <- cptable(~smoke, values=c(5,5), levels=yn)
l.s  <- cptable(~lung|smoke, values=c(1,9,1,99), levels=yn)
b.s  <- cptable(~bronc|smoke, values=c(6,4,3,7), levels=yn)
e.lt <- cptable(~either|lung:tub,values=c(1,0,1,0,1,0,0,1),levels=yn)
x.e  <- cptable(~xray|either, values=c(98,2,5,95), levels=yn)
d.be <- cptable(~dysp|bronc:either, values=c(9,1,7,3,8,2,1,9), levels=yn)
plist <- compileCPT(list(a, t.a, s, l.s, b.s, e.lt, x.e, d.be))
plist
net1 <- grain(plist)
net1
@ %def 

@ 
<<LS,fig=T,include=F,echo=F>>=
plot(net1)
@ %def 


This section reviews the chest clinic example of \cite{lau/spieg:88}
(illustrated in Figure~\ref{fig:chest-LS}) and shows one way of
specifying the model in \grbn{}.  \cite{lau/spieg:88} motivate the
chest clinic example as follows:

\begin{quote}
  ``Shortness--of--breath (dyspnoea) may be due to tuberculosis, lung
  cancer or bronchitis, or none of them, or more than one of them. A
  recent visit to Asia increases the chances of tuberculosis, while
  smoking is known to be a risk factor for both lung cancer and
  bronchitis. The results of a single chest X--ray do not discriminate
  between lung cancer and tuberculosis, as neither does the presence or
  absence of dyspnoea.''
\end{quote}

\begin{figure}[ht]
  \centering
  \includegraphics[height=5cm]{figures/graph-LS}
  \caption{Chest clinic example from LS.}
  \label{fig:chest-LS}
\end{figure}




\subsection{Building a network}

A Bayesian network is a special case of graphical independence
networks. In this section we outline how to build a Bayesian network. 
The starting point is a probability
distribution factorising accoring to a DAG with nodes
$V$. Each node $v\in V$ has a set $pa(v)$ of parents and each node
$v\in V$ has a finite set of states. A joint distribution
over the variables $V$ can be given as 
\begin{equation}
  \label{eq:dagfact1}
  p(V) = \prod_{v\in V} p(v|pa(v))
\end{equation}
where $p(v|pa(v))$ is a function defined on $(v,pa(v))$. This function
satisfies that $\sum_{v^*} p(v=v^*|pa(v))=1$, i.e.\ that
for each configuration of the parents $pa(v)$, the sum
over the levels of $v$ equals one. Hence $p(v|pa(v))$ becomes the
conditional distribution of $v$ given $pa(v)$. 
In practice $p(v|pa(v))$ is specified as a table called a conditional
probability table or a CPT for short.  
Thus, a Bayesian network can be regarded as a complex stochastic model built up by
putting together simple components (conditional probability
distributions). 

Thus the DAG in
Figure~\ref{fig:chest-LS} dictates a factorization of the joint
probability function as
\begin{equation}
  \label{eq:chestfact1}
  p(V) =
  p(\alpha)p(\sigma)p(\tau|\alpha)p(\lambda|\sigma)p(\beta|\sigma)p(\epsilon|\tau,\lambda)
  p(\delta|\epsilon, \beta)p(\xi|\epsilon).
\end{equation}
In (\ref{eq:chestfact1}) we have 
$\alpha=\mbox{asia}$, 
$\sigma=\mbox{smoker}$,
$\tau=\mbox{tuberculosis}$,
$\lambda=\mbox{lung cancer}$,
$\beta=\mbox{bronchitis}$,
$\epsilon=\mbox{either tuberculosis or lung cancer}$,
$\delta=\mbox{dyspnoea}$ and
$\xi=\mbox{xray}$. Note that $\epsilon$ is a logical variable which is
true if either $\tau$ or $\lambda$ are true and false otherwise. 


<<echo=F,results=hide>>=
library(gRain)
options("prompt"="> ","width"=85)
@ 


\subsection{Queries to networks}
\label{sec:xxx}

Suppose we are given the evidence (sometimes also called ``finding'')
that a set of variables $E\subset V$ have a specific value $e^*$. For
example that a person has recently visited Asia and suffers from
dyspnoea, i.e.\ $\alpha=\mbox{yes}$ and $\delta=\mbox{yes}$.

With this evidence, we are often interested in the
conditional distribution $p(v|E=e^*)$ for some of the variables $v \in
V \setminus E$ or in $p(U|E=e^*)$ for a set $U\subset V
\setminus E$. 

In the chest clinic example, interest might be in $p(\lambda|e^*)$, $p(\tau|e^*)$
and  $p(\beta|e^*)$, or possibly in the joint (conditional) distribution
$p(\lambda,\tau,\beta|e^*)$.

Interest might also be in
calculating the probability of a specific event, e.g.\ the probability
of seeing a specific evidence, i.e.\ $p(E=e^*)$.


\section{A one--minute version of  \grbn{}}
\label{sec:oneminute}

A simple way of  specifying the model for the chest clinic
example is as follows. 

\begin{enumerate}
\item Specify conditional probability tables (with values as given in
  \cite{lau/spieg:88}):

@ 
<<>>=
yn <- c("yes","no")
a    <- cptable(~asia, values=c(1,99),levels=yn)
t.a  <- cptable(~tub|asia, values=c(5,95,1,99),levels=yn)
s    <- cptable(~smoke, values=c(5,5), levels=yn)
l.s  <- cptable(~lung|smoke, values=c(1,9,1,99), levels=yn)
b.s  <- cptable(~bronc|smoke, values=c(6,4,3,7), levels=yn)
e.lt <- cptable(~either|lung:tub,values=c(1,0,1,0,1,0,0,1),levels=yn)
x.e  <- cptable(~xray|either, values=c(98,2,5,95), levels=yn)
d.be <- cptable(~dysp|bronc:either, values=c(9,1,7,3,8,2,1,9), levels=yn)
@ %def 

\item Compile list of conditional probability tables and create the network:

@ 
<<>>=
plist <- compileCPT(list(a, t.a, s, l.s, b.s, e.lt, x.e, d.be))
plist
plist$tub    
plist$either ## Notice: a logical node
net1 <- grain(plist)
net1
@ %def 

% Next, a number of initialisation steps are made:
% @ 
% <<print=T>>=
% net1c <- compilegm(net1, propagate=TRUE)
% @ %def 

\item The network can be queried to give marginal probabilities:

@ 
<<>>=
querygrain(net1, nodes=c("lung","bronc"), type="marginal")
@ %def 

Likewise, a joint distribution can be obtained:

@ 
<<>>=
querygrain(net1,nodes=c("lung","bronc"), type="joint")
@ %def 

\item Evidence can be entered in one of these two equivalent forms:

<<>>=
net12  <- setEvidence(net1, 
                      nodes=c("asia", "dysp"), states=c("yes", "yes"))
net12  <- setEvidence(net1, nslist=list(asia="yes", dysp="yes"))
@ %def

\item The network can be queried again:

@ 
<<>>=
querygrain( net12, nodes=c("lung","bronc") )
querygrain( net12, nodes=c("lung","bronc"), type="joint" )
@ %def 


\item Zero probabilities
  
  Consider setting the evidence
@ 
<<>>=
net13 <- setEvidence(net1,nodes=c("either", "tub"), 
                     states=c("no","yes"))
@ %def
  
Under the model, this finding has zero probability;
@ 
<<>>=
pEvidence( net13 )
@ %def 

Therefore, all conditional probabilities are (under the model) undefined;

@ 
<<>>=
querygrain( net13, nodes=c("lung","bronc"), type="joint" )
@ %def 


\end{enumerate}

% \section{Likelihood evidence (virtual evidence)}
% \label{sec:likel-evid-virt}




\bibliography{gRain}

\end{document}

